matrix <- cbind(matrix, corrected_pvalues)
## Filtering significant results
#Filter by the new p_values
filtered_matrix <- subset(matrix, matrix[,10]<0.05)
colnames(filtered_matrix)[1] <- "Taxonomy"
name2 <- colnames(filtered_matrix)[6]
nc2 <- paste(name2, "_filtered.txt", sep ="")
assign(nc2, filtered_matrix)
final_name_matrix2 <- paste("~/", nc2, sep = "")
#Not print empty tables
if (nrow(filtered_matrix)>0) {
write.table(filtered_matrix, file = final_name_matrix2, quote = F, sep = "\t" )
}
}
View(AgeAtFecalSampling.Variable_filtered.txt)
MyMerge <- function(x, y){
df <- merge(x, y, by="Taxonomy" , all.x= TRUE, all.y= TRUE)
return(df)
}
unique_taxonomies <- Reduce(MyMerge, AgeAtFecalSampling.Variable_filtered.txt, ANCAposneg.Variable_filtered.txt, Groupsmall.intestine.Variable_filtered.txt)
all_matrix <- as.data.frame(do.call(rbind, matrix_list))
all_matrix <- as.data.frame(do.call(rbind, matrix_list))
split_matrix <- split(all_matrix, all_matrix$Variable)
for (bb in 1:length(split_matrix)){
#Correct by p_values
matrix <- as.data.frame(split_matrix[bb])
p_value <- as.vector(matrix[,8])
corrected_pvalues <- p.adjust(p_value, method = "fdr")
#Add a new column with the new p_values
matrix <- cbind(matrix, corrected_pvalues)
## Filtering significant results
#Filter by the new p_values
filtered_matrix <- subset(matrix, matrix[,10]<0.05)
colnames(filtered_matrix)[1] <- "Taxonomy"
name2 <- colnames(filtered_matrix)[6]
nc2 <- paste(name2, "_filtered", sep ="")
assign(nc2, filtered_matrix)
final_name_matrix2 <- paste("~/", nc2, sep = "")
#Not print empty tables
if (nrow(filtered_matrix)>0) {
write.table(filtered_matrix, file = final_name_matrix2, quote = F, sep = "\t" )
}
}
View(AgeAtFecalSampling.Variable_filtered)
View(all_matrix)
View(AgeAtFecalSampling.Variable_filtered)
unique_taxonomies <- Reduce(MyMerge, list(AgeAtFecalSampling.Variable_filtered, ANCAposneg.Variable_filtered, Groupsmall.intestine.Variable_filtered))
View(unique_taxonomies)
table1 <- merge(AgeAtFecalSampling.Variable_filtered, ANCAposneg.Variable_filtered, by = "Taxonomy")
View(table1)
table1 <- merge(table1, Groupsmall.intestine.Variable_filtered, by = "Taxonomy")
View(table1)
View(Groupsmall.intestine.Variable_filtered)
table1 <- merge(Groupsmall.intestine.Variable_filtered, AgeAtFecalSampling.Variable_filtered, by = "Taxonomy")
View(table1)
intersect1 <- intersect(AgeAtFecalSampling.Variable_filtered$Taxonomy, ANCAposneg.Variable_filtered$Taxonomy)
intersect1 <- unique(AgeAtFecalSampling.Variable_filtered$Taxonomy, ANCAposneg.Variable_filtered$Taxonomy)
intersect1
unique_group <- read.table("~/Desktop/unique_group_normal_small.txt", sep = "\t", check.names = F)
unique_group <- read.table("~/Desktop/unique_group_normal_small.txt", sep = "\t", check.names = F)
unique_group <- read.table("~/Desktop/unique_group_normal_small.txt", check.names = F)
unique_group <- read.table("~/Desktop/unique_group_normal_small.txt")
unique_group <- read.table("~/Desktop/unique_group_normal_small.txt", header= F)
View(unique_group)
unique_group <- t(unique_group)
View(unique_group)
unique_group <- as.data.frame(t(unique_group))
View(unique_group)
View(unique_group)
unique_group <- read.table("~/Desktop/unique_group_normal_small.txt", header= F)
unique_group <- as.data.frame(t(unique_group))
View(unique_group)
colnames(unique_group)[1] <- "Taxonomy"
View(unique_group)
View(Groupsmall.intestine.Variable_filtered)
unique_group <- merge(unique_group, Groupsmall.intestine.Variable_filtered, by = "Taxonomy")
View(unique_group)
View(Groupsmall.intestine.Variable_filtered)
View(how_often_pizza.Variable_filtered)
unique_group_effect_normal <- subset(unique_group, unique_group$Groupsmall.intestine.effect<0)
View(unique_group_effect_normal)
is.numeric(unique_group$Groupsmall.intestine.effect)
as.numeric(as.character(unique_group$Groupsmall.intestine.effect))
is.numeric(unique_group$Groupsmall.intestine.effect)
unique_group <- as.numeric(as.character(unique_group$Groupsmall.intestine.effect))
unique_group <- as.data.frame(unique_group)
View(unique_group)
unique_group <- read.table("~/Desktop/unique_group_normal_small.txt", header= F)
unique_group <- as.data.frame(t(unique_group))
colnames(unique_group)[1] <- "Taxonomy"
unique_group <- merge(unique_group, Groupsmall.intestine.Variable_filtered, by = "Taxonomy")
View(unique_group)
unique_group$Groupsmall.intestine.effect <- as.numeric(as.character(unique_group$Groupsmall.intestine.effect))
is.numeric(unique_group$Groupsmall.intestine.effect)
unique_group_effect_normal <- subset(unique_group, unique_group$Groupsmall.intestine.effect<0)
View(unique_group_effect_normal)
write.table(unique_group_effect_normal, file = "~/effect_group_normal.txt", sep = "\t", quote = F)
metadata <- read.table("~/Documents/Universitat/Holanda/Projecte/Metadata/logistic_regression_metadata_adonis.txt", sep = "\t", header = T, row.names = 1, check.names = F)
metadata_table <- metadata
for (i in 1:ncol(metadata_table)) {
if (is.factor(metadata_table[,i]) & any(is.na(metadata_table[,i]))) {
metadata_table[,i] <- as.integer(metadata_table[,i])
}
}
library (psych)
for (ii in 1:ncol(metadata_table)){
for (jj in 1:nrow(metadata_table)) {
if (is.na(metadata_table[jj,ii])){
x = describe(metadata_table[,ii])
a = x$median
metadata_table[jj,ii] = a
}
}
}
metadata_table <- metadata_table[, sapply(metadata_table, function(col) length(unique(col))) > 1]
taxonomy_table <- read.table("~/Documents/Universitat/Holanda/Projecte/abundance_filtered_taxonomy.txt", sep = "\t", header = T, row.names = 1, check.names = F)
p_a_table <- taxonomy_table
for (i in 1:ncol(taxonomy_table)) {
for (j in 1:nrow(taxonomy_table)) {
if (taxonomy_table[j,i]>0) {
p_a_table[j,i] = 1
}
}
}
nzsum <- function(x){
sum (x==0)
}
nsum <- function(x){
sum (x!=0)
}
normal_intermediate_metadata <- metadata_table[!(metadata_table$Group=="small intestine"),]
matrix_list <- list()
table_variables <- matrix(ncol = 2, nrow = ncol(p_a_table))
for (x in 1:ncol(p_a_table))  {
#Get column
name_column <- colnames(p_a_table)[x]
taxonomy <- subset(p_a_table, select = name_column)
#Create a table for the model. Merge taxonomy column with metadata
model_table <- merge(taxonomy, normal_intermediate_metadata, by = "row.names" )
row.names(model_table) <- model_table[,1]
model_table <- model_table[,-1]
#Change taxonomy name
colnames(model_table)[1] <- "Taxonomy"
#Sort
model_table <- model_table[ , order(names(model_table))]
#Calculate model
model <- glm(Taxonomy ~ . , family = binomial(link = "logit"), data = model_table)
##Calculate Anova
anova_test <- anova(model, test = "Chisq")
##Keep significative variables for model2
variables_model2 <- subset(anova_test, anova_test[,5]<0.05)
list_variables_model1 <- as.vector(c(colnames(model_table)))
list_variables_model1 <- paste(c(list_variables_model1), collapse=',' )
#If there are significative variables
if (nrow(variables_model2)>0) {
# Save names of the significative variables: create a new metadata table with these variables (model_table2)
matrix_variables_model2 <- as.data.frame(rownames(variables_model2))
rownames(matrix_variables_model2) <- matrix_variables_model2[,1]
t_model_table <- t(model_table)
list_variables_model2 <- as.vector(matrix_variables_model2$`rownames(variables_model2)`)
list_variables_model2 <- paste(c(list_variables_model2), collapse=', ' )
t_model_table2 <- merge(matrix_variables_model2, t_model_table, by = "row.names")
rownames(t_model_table2) <- t_model_table2[,1]
t_model_table2[1:2] <- NULL
model_table2 <- t(t_model_table2)
# Merge the new table with the taxonomy again (lost in the last merge)
model_table2 <- merge(taxonomy, model_table2, by = "row.names" )
row.names(model_table2) <- model_table2[,1]
model_table2 <- model_table2[,-1]
#Change taxonomy name
colnames(model_table2)[1] <- "Taxonomy"
# Change character to numeric
for (ii in 1:ncol(model_table2))  {
column_name2 <- colnames(model_table2)[ii]
for (jjj in 1:ncol(model_table)) {
column_name <- colnames(model_table)[jjj]
if (column_name == column_name2 & is.numeric(model_table[,jjj])) {
model_table2[,ii] <- as.numeric(as.character(model_table2[,ii]))
}
}
}
# Sort
model_table2 <- model_table2[ , order(names(model_table2))]
## Calculate model2 with the new table: contains only the significative variables in anova test
model2 <- glm(Taxonomy ~ . , family = binomial(link="logit"), data = model_table2)
# Test the two models
anova_test <- anova(model, model2, test = "Chisq")
# Model 2 and model 1 are equal: save model 1 results
if (is.na(anova_test[2,5])) {
summary_table <- summary(model)
coefficients_table <- as.data.frame(summary_table$coefficients)
category1_samples <- subset(model_table, model_table$Group=="normal")
nsum1 = nsum(category1_samples$Taxonomy)
nzsum1 = nzsum(category1_samples$Taxonomy)
category2_samples <- subset(model_table, model_table$Group=="intermediate")
nsum2 = nsum(category2_samples$Taxonomy)
nzsum2 = nzsum(category2_samples$Taxonomy)
loop_matrix <- matrix(ncol = 9, nrow = nrow(coefficients_table))
colnames(loop_matrix) <- c("Taxonomy","presence_normal", "absence_normal", "presence_intermediate", "absence_intermediate", "Variable","effect","p_value", "Model")
a = 1
for (jj in 1:nrow(coefficients_table)) {
loop_matrix[a,1] = name_column
loop_matrix[a,2] = nsum1
loop_matrix[a,3] = nzsum1
loop_matrix[a,4] = nsum2
loop_matrix[a,5] = nzsum2
loop_matrix[a,6] = rownames(coefficients_table)[jj]
loop_matrix[a,7] = coefficients_table[jj,1]
loop_matrix[a,8] = coefficients_table[jj,4]
loop_matrix[a,9] = "model_1"
a <- a + 1
}
loop_matrix <- na.omit(loop_matrix)
loop_matrix1 <- loop_matrix
for (kk in 1:nrow(loop_matrix)) {
if (loop_matrix[kk,6]=="(Intercept)") {
loop_matrix1 <- loop_matrix[-kk,]
}
}
matrix_list[[x]] <- loop_matrix1
table_variables[x,1] = name_column
table_variables[x,2] = list_variables_model1
}
#Model 2 is not better than model 1: save model 1 results
else if (anova_test[2,5]<0.05) {
summary_table <- summary(model)
coefficients_table <- as.data.frame(summary_table$coefficients)
category1_samples <- subset(model_table, model_table$Group=="normal")
nsum1 = nsum(category1_samples$Taxonomy)
nzsum1 = nzsum(category1_samples$Taxonomy)
category2_samples <- subset(model_table, model_table$Group=="intermediate")
nsum2 = nsum(category2_samples$Taxonomy)
nzsum2 = nzsum(category2_samples$Taxonomy)
loop_matrix <- matrix(ncol = 9, nrow = nrow(coefficients_table))
colnames(loop_matrix) <- c("Taxonomy","presence_normal", "absence_normal", "presence_intermediate", "absence_intermediate", "Variable","effect","p_value", "Model")
a = 1
for (jj in 1:nrow(coefficients_table)) {
loop_matrix[a,1] = name_column
loop_matrix[a,2] = nsum1
loop_matrix[a,3] = nzsum1
loop_matrix[a,4] = nsum2
loop_matrix[a,5] = nzsum2
loop_matrix[a,6] = rownames(coefficients_table)[jj]
loop_matrix[a,7] = coefficients_table[jj,1]
loop_matrix[a,8] = coefficients_table[jj,4]
loop_matrix[a,9] = "model_1"
a <- a + 1
}
loop_matrix <- na.omit(loop_matrix)
loop_matrix1 <- loop_matrix
for (kk in 1:nrow(loop_matrix)) {
if (loop_matrix[kk,6]=="(Intercept)") {
loop_matrix1 <- loop_matrix[-kk,]
}
}
matrix_list[[x]] <- loop_matrix1
table_variables[x,1] = name_column
table_variables[x,2] = list_variables_model1
}
##Model 2 is better than model 1: save model 2 results
else {
summary_table2 <- summary(model2)
#Save coefficients results
coefficients_table <- as.data.frame(summary_table2$coefficients)
#Get number presence/absence of the taxonomy for each category
category1_samples <- subset(model_table2, model_table2$Group=="normal")
#Presence
nsum1 = nsum(category1_samples$Taxonomy)
#Absence
nzsum1 = nzsum(category1_samples$Taxonomy)
category2_samples <- subset(model_table2, model_table2$Group=="intermediate")
#Presence
nsum2 = nsum(category2_samples$Taxonomy)
#Absence
nzsum2 = nzsum(category2_samples$Taxonomy)
loop_matrix <- matrix(ncol = 9, nrow = nrow(coefficients_table))
colnames(loop_matrix) <- c("Taxonomy","presence_normal", "absence_normal", "presence_intermediate", "absence_intermediate", "Variable","effect","p_value", "Model")
a = 1
#Save in a new matrix:
for (jj in 1:nrow(coefficients_table)) {
loop_matrix[a,1] = name_column    #name taxonomy
loop_matrix[a,2] = nsum1          #presence taxonomy in category1
loop_matrix[a,3] = nzsum1         #absence taxonomy in category1
loop_matrix[a,4] = nsum2          #presence taxonomy in category2
loop_matrix[a,5] = nzsum2         #absence taxonomy in category2
loop_matrix[a,6] = rownames(coefficients_table)[jj]   #name of the variable
loop_matrix[a,7] = coefficients_table[jj,1]    #effect value
loop_matrix[a,8] = coefficients_table[jj,4]    #p_value
loop_matrix[a,9] = "model_2"
a <- a + 1
}
loop_matrix <- na.omit(loop_matrix)  #remove empty rows (NA values)
loop_matrix1 <- loop_matrix
for (kk in 1:nrow(loop_matrix)) {   #remove (Intercept) results
if (loop_matrix[kk,6]=="(Intercept)") {
loop_matrix1 <- loop_matrix[-kk,]
}
}
matrix_list[[x]] <- loop_matrix1   #Save the new matrix in a list of matrix
table_variables[x,1] = name_column
table_variables[x,2] = list_variables_model2
}
}
## If are not significative variables in anova test: keep model1 results
else {
summary_table <- summary(model)
coefficients_table <- as.data.frame(summary_table$coefficients)
category1_samples <- subset(model_table, model_table$Group=="normal")
nsum1 = nsum(category1_samples$Taxonomy)
nzsum1 = nzsum(category1_samples$Taxonomy)
category2_samples <- subset(model_table, model_table$Group=="intermediate")
nsum2 = nsum(category2_samples$Taxonomy)
nzsum2 = nzsum(category2_samples$Taxonomy)
loop_matrix <- matrix(ncol = 9, nrow = nrow(coefficients_table))
colnames(loop_matrix) <- c("Taxonomy","presence_normal", "absence_normal", "presence_intermediate", "absence_intermediate", "Variable","effect","p_value", "Model")
a = 1
for (jj in 1:nrow(coefficients_table)) {
loop_matrix[a,1] = name_column
loop_matrix[a,2] = nsum1
loop_matrix[a,3] = nzsum1
loop_matrix[a,4] = nsum2
loop_matrix[a,5] = nzsum2
loop_matrix[a,6] = rownames(coefficients_table)[jj]
loop_matrix[a,7] = coefficients_table[jj,1]
loop_matrix[a,8] = coefficients_table[jj,4]
loop_matrix[a,9] = "model_1"
a <- a + 1
}
loop_matrix <- na.omit(loop_matrix)
loop_matrix1 <- loop_matrix
for (kk in 1:nrow(loop_matrix)) {
if (loop_matrix[kk,6]=="(Intercept)") {
loop_matrix1 <- loop_matrix[-kk,]
}
}
matrix_list[[x]] <- loop_matrix1
table_variables[x,1] = name_column
table_variables[x,2] = list_variables_model1
}
}
write.table(unique_group, file = "~/effect_group_normal_small.txt", sep = "\t", quote = F)
unique_group <- merge(unique_group, Groupsmall.intestine.Variable_filtered, by = "Taxonomy")
unique_group <- read.table("~/Desktop/unique_group_normal_small.txt", header= F)
unique_group <- as.data.frame(t(unique_group))
colnames(unique_group)[1] <- "Taxonomy"
unique_group <- merge(unique_group, Groupsmall.intestine.Variable_filtered, by = "Taxonomy")
Groupsmall.intestine.Variable_filtered <- read.table("~/Documents/Universitat/Holanda/logistic_regression_adonis_data/normal_small_results/filtered_normal_small/Groupsmall.intestine.Variable_filtered.txt")
Groupsmall.intestine.Variable_filtered <- read.table("~/Documents/Universitat/Holanda/logistic_regression_adonis_data/normal_small_results/filtered_normal_small/Groupsmall.intestine.Variable_filtered.txt", header = T, sep = "\t")
View(Groupsmall.intestine.Variable_filtered)
colnames(Groupsmall.intestine.Variable_filtered[1]) <- "Taxonomy"
unique_group <- as.data.frame(t(unique_group))
colnames(unique_group)[1] <- "Taxonomy"
unique_group <- merge(unique_group, Groupsmall.intestine.Variable_filtered, by = "Taxonomy")
unique_group$Groupsmall.intestine.effect <- as.numeric(as.character(unique_group$Groupsmall.intestine.effect))
View(Groupsmall.intestine.Variable_filtered)
colnames(Groupsmall.intestine.Variable_filtered)[1] <- "Taxonomy"
unique_group <- as.data.frame(t(unique_group))
colnames(unique_group)[1] <- "Taxonomy"
unique_group <- merge(unique_group, Groupsmall.intestine.Variable_filtered, by = "Taxonomy")
unique_group$Groupsmall.intestine.effect <- as.numeric(as.character(unique_group$Groupsmall.intestine.effect))
write.table(unique_group, file = "~/effect_group_normal_small.txt", sep = "\t", quote = F)
unique_group_normal_intermediate <- read.table("~/Desktop/unique_group_normal_intermediate.txt", header= F)
View(unique_group_normal_intermediate)
Groupnormal.Variable_filtered <- read.table("~/Documents/Universitat/Holanda/logistic_regression_adonis_data/normal_intermediate_results/filtered_normal_intermediate/Groupnormal.Variable_filtered.txt", header = T, sep = "\t")
colnames(Groupsmall.intestine.Variable_filtered)[1] <- "Taxonomy"
unique_group <- as.data.frame(t(unique_group))
unique_group_normal_intermediate <- as.data.frame(t(unique_group_normal_intermediate))
colnames(unique_group_normal_intermediate)[1] <- "Taxonomy"
unique_group_normal_intermediate <- merge(unique_group_normal_intermediate, Groupnormal.Variable_filtered, by = "Taxonomy")
unique_group_normal_intermediate <- read.table("~/Desktop/unique_group_normal_intermediate.txt", header= F)
unique_group_normal_intermediate <- as.data.frame(t(unique_group_normal_intermediate))
colnames(unique_group_normal_intermediate)[1] <- "Taxonomy"
Groupnormal.Variable_filtered <- read.table("~/Documents/Universitat/Holanda/logistic_regression_adonis_data/normal_intermediate_results/filtered_normal_intermediate/Groupnormal.Variable_filtered.txt", header = T, sep = "\t")
colnames(Groupsmall.intestine.Variable_filtered)[1] <- "Taxonomy"
unique_group_normal_intermediate <- merge(unique_group_normal_intermediate, Groupnormal.Variable_filtered, by = "Taxonomy")
View(Groupnormal.Variable_filtered)
colnames(Groupnormal.Variable_filtered)[1] <- "Taxonomy"
unique_group_normal_intermediate <- merge(unique_group_normal_intermediate, Groupnormal.Variable_filtered, by = "Taxonomy")
View(unique_group_normal_intermediate)
unique_group_normal_intermediate <- read.table("~/Desktop/unique_group_normal_intermediate.txt", header= F)
colnames(unique_group_normal_intermediate)[1] <- "Taxonomy"
Groupnormal.Variable_filtered <- read.table("~/Documents/Universitat/Holanda/logistic_regression_adonis_data/normal_intermediate_results/filtered_normal_intermediate/Groupnormal.Variable_filtered.txt", header = T, sep = "\t")
colnames(Groupnormal.Variable_filtered)[1] <- "Taxonomy"
unique_group_normal_intermediate <- merge(unique_group_normal_intermediate, Groupnormal.Variable_filtered, by = "Taxonomy")
View(unique_group_normal_intermediate)
write.table(unique_group_normal_intermediate, file = "~/effect_group_normal_intermediate.txt", sep = "\t", quote = F)
unique_group_intermediate_small <- read.table("~/Desktop/unique_group_intermediate_small.txt", sep = "\t", quote = F)
unique_group_intermediate_small <- read.table("~/Desktop/unique_group_intermediate_small.txt", header = F)
unique_group_intermediate_small <- read.table("~/Desktop/unique_group_intermediate_small.txt", header = F)
colnames(unique_group_intermediate_small)[1] <- "Taxonomy"
Groupsmall.intestine.Variable_filtered <- read.table("~/Documents/Universitat/Holanda/logistic_regression_adonis_data/intermediate_small_results/filtered_intermediate_small/Groupsmall.intestine.Variable_filtered.txt", header = T, sep = "\t")
colnames(Groupsmall.intestine.Variable_filtered)[1] <- "Taxonomy"
unique_group_intermediate_small <- merge(unique_group_intermediate_small, Groupsmall.intestine.Variable_filtered, by = "Taxonomy")
write.table(unique_group_intermediate_small, file = "~/effect_group_intermediate_small.txt", sep= "\t", quote = F)
plot_table <- read.table("~/Documents/Universitat/Holanda/Projecte/plot_table_species.txt", sep = "\t", header = T, row.names = 1, check.names = F)
View(plot_table)
group <- read.table("~/Documents/Universitat/Holanda/Projecte/intestinal_content_group.txt", sep ="\t", header = T, row.names = 1, check.names = F)
group_plot_table <- merge(plot_table, group, by = "row.names")
rownames(group_plot_table) <- group_plot_table[,1]
group_plot_table <- group_plot_table[,-1]
View(group_plot_table)
plot_matrix = matrix(ncol = 3, nrow = 15)
normal_plot_table <- subset(group_plot_table, group_plot_table$Group=="normal")
normal_plot_table$Group <- NULL
small_plot_table <- subset(group_plot_table, group_plot_table$Group=="small intestine")
small_plot_table$Group <- NULL
intermediate_plot_table <- subset(group_plot_table, group_plot_table$Group=="intermediate")
intermediate_plot_table$Group <- NULL
group_plot_table$Group <- NULL
for (k in 1:ncol(group_plot_table)) {
percentage_normal = (nsum(intermediate_plot_table[,k])/nrow(intermediate_plot_table))
percentage_small = (nsum(small_plot_table[,k])/nrow(small_plot_table))
name_column <- colnames(group_plot_table)[k]
name_column <- unlist(strsplit(name_column, split='|', fixed=TRUE))
new_name_column <- tail(name_column, n = 1)
plot_matrix[k,1] = new_name_column
plot_matrix[k,2] = percentage_normal
plot_matrix[k,3] = percentage_small
}
View(plot_matrix)
for (k in 1:ncol(group_plot_table)) {
percentage_normal = (nsum(normal_plot_table[,k])/nrow(normal_plot_table))
percentage_small = (nsum(small_plot_table[,k])/nrow(small_plot_table))
name_column <- colnames(group_plot_table)[k]
name_column <- unlist(strsplit(name_column, split='|', fixed=TRUE))
new_name_column <- tail(name_column, n = 1)
plot_matrix[k,1] = new_name_column
plot_matrix[k,2] = percentage_normal
plot_matrix[k,3] = percentage_small
}
colnames(plot_matrix) <- c("Taxonomy", "%_normal", "%_small")
library(ggplot2)
library(reshape2)
plot_matrix=as.data.frame(plot_matrix)
test_plot1 = melt(plot_matrix, id=1)
ggplot(test_plot1, aes(x=Taxonomy, y=as.numeric(value), group=variable, fill=variable)) + geom_bar(stat="identity",position="dodge") + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 8))
species_table <- read.table("~/DUDes_results/species_table_DUDes.txt", sep = "\t", header = T, row.names = 1)
species_table <- read.table("~/Documents/Universitat/Holanda/Projecte/DUDes_results/species_table_DUDes.txt", sep = "\t", header = T, row.names = 1)
reads_table <- read.table("~/Documents/Universitat/Holanda/Projecte/reads_over_10M.txt", sep = "\t", header = T, row.names = 1)
reads_table$IBDFEC <- NULL
alpha <- as.data.frame(diversity(species_table,index="shannon"))
library(vegan)
alpha <- as.data.frame(diversity(species_table,index="shannon"))
View(alpha)
intestinal_groups <- read.table("~/Documents/Universitat/Holanda/Projecte/intestinal_content_group.txt", sep="\t", header = T, row.names = 1)
filum_table <- read.table("~/DUDes_results/filum_table_DUDes.txt", sep = "\t", header = T, row.names = 1, check.names = F)
filum_table <- read.table("~/Documents/Universitat/Holanda/Projecte/DUDes_results/filum_table_DUDes.txt", sep = "\t", header = T, row.names = 1, check.names = F)
tax_table <- read.table("~/Documents/Universitat/Holanda/Projecte/filtered_tax_DUDes.txt", sep = "\t", header = T, row.names = 1, check.names = F)
library(vegan)
library(ggplot2)
beta <- vegdist(species_table, method="bray")
my_pcoa <- as.data.frame(cmdscale(beta, k = 4))
colnames(my_pcoa)[1:4] <- c("PCoA1","PCoA2","PCoA3","PCoA4")
plot_table1 <- merge(filum_table, my_pcoa, by="row.names")
rownames(plot_table1) <- plot_table1[,1]
plot_table1 <- plot_table1[,-1]
plot_table2 <- merge(plot_table1, intestinal_groups, by="row.names")
rownames(plot_table2) <- plot_table2[,1]
plot_table2 <- plot_table2[,-1]
plot_table3 <- merge(plot_table2, alpha, by="row.names")
rownames(plot_table3) <- plot_table3[,1]
plot_table3 <- plot_table3[,-1]
final_plot_table <- merge(plot_table3, reads_table, by = "row.names")
rownames(final_plot_table) <- final_plot_table[,1]
final_plot_table <- final_plot_table[,-1]
my_col=c("#0000FF","#62A4D1","#5BE55B","#FFF000", "#FF0000")
a_plot <- ggplot (final_plot_table, aes(x=PCoA1, y=PCoA2, geom="blank", colour=final_plot_table$p__Actinobacteria)) + geom_point () + scale_color_gradientn(colours = my_col, "Actinobacteria") + theme_classic() + labs(x="PCoA1", y="PCoA2")
a_plot
b_plot <- ggplot (final_plot_table, aes(x=PCoA1, y= PCoA2, geom = "blank", colour = final_plot_table$p__Bacteroidetes)) + geom_point() + scale_color_gradientn(colours = my_col, "Bacteroidetes") + theme_classic() + labs(x = "PCoA1", y="PCoA2")
b_plot
f_plot <- ggplot (final_plot_table, aes(x=PCoA1, y= PCoA2, geom = "blank", colour = final_plot_table$p__Firmicutes)) + geom_point() + scale_color_gradientn(colours = my_col, "Firmicutes") + theme_classic() + labs(x = "PCoA1", y = "PCoA2")
f_plot
my_col2 <- c("#000080","#00ffff")
final_plot_table$color="none"
final_plot_table[final_plot_table$Group=="normal",]$color="black"
final_plot_table[final_plot_table$Group=="intermediate",]$color="#2F2BFF"
final_plot_table[final_plot_table$Group=="small intestine",]$color="red"
total_groups_plot <- ggplot (final_plot_table, aes(x=PCoA1, y=PCoA2, geom="blank", colour=color)) + geom_point () + scale_color_identity("Intestinal content", breaks=final_plot_table$color, labels=final_plot_table$Group, guide = "legend") + theme_classic() + labs(x="PCoA1", y="PCoA2")
total_groups_plot
plot_table <- read.table("~/Documents/Universitat/Holanda/Projecte/plot_table_species.txt", sep = "\t", header = T, row.names = 1, check.names = F)
group <- read.table("~/Documents/Universitat/Holanda/Projecte/intestinal_content_group.txt", sep ="\t", header = T, row.names = 1, check.names = F)
group_plot_table <- merge(plot_table, group, by = "row.names")
rownames(group_plot_table) <- group_plot_table[,1]
group_plot_table <- group_plot_table[,-1]
View(group_plot_table)
plot_matrix = matrix(ncol = 4, nrow = 15)
normal_plot_table <- subset(group_plot_table, group_plot_table$Group=="normal")
normal_plot_table$Group <- NULL
small_plot_table <- subset(group_plot_table, group_plot_table$Group=="small intestine")
small_plot_table$Group <- NULL
intermediate_plot_table <- subset(group_plot_table, group_plot_table$Group=="intermediate")
intermediate_plot_table$Group <- NULL
group_plot_table$Group <- NULL
for (k in 1:ncol(group_plot_table)) {
percentage_normal = (nsum(normal_plot_table[,k])/nrow(normal_plot_table))
percentage_intermediate = (nsum(intermediate_plot_table[,k])/nrow(intermediate_plot_table))
percentage_small = (nsum(small_plot_table[,k])/nrow(small_plot_table))
name_column <- colnames(group_plot_table)[k]
name_column <- unlist(strsplit(name_column, split='|', fixed=TRUE))
new_name_column <- tail(name_column, n = 1)
plot_matrix[k,1] = new_name_column
plot_matrix[k,2] = percentage_normal
plot_matrix[k,3] = percentage_intermediate
plot_matrix[k,4] = percentage_small
}
View(plot_matrix)
colnames(plot_matrix) <- c("Taxonomy", "%_normal", "%_intermediate", "%_small")
library(ggplot2)
library(reshape2)
plot_matrix=as.data.frame(plot_matrix)
test_plot1 = melt(plot_matrix, id=1)
ggplot(test_plot1, aes(x=Taxonomy, y=as.numeric(value), group=variable, fill=variable)) + geom_bar(stat="identity",position="dodge") + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 8))
