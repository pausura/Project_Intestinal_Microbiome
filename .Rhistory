View(`Asmall intestine`)
View(Anormal)
View(Aintermediate)
View(AGroup)
b <- list_names[1,1]
b
j = 1
k = 2
others_position = top_tax_value + 1
results_table <- matrix(nrow = others_position, ncol= 2 )
list_names <- list(names(split_categories))
list_names <- as.data.frame(list_names)
rownames(list_names) <- list_names[,1]
for (i in split_categories) {
## Calculate mean
summary_table <- describe(i)
## Find the rows with the highest values by the given value
top_tax <- summary_table[order(summary_table$mean, decreasing = T)[1:top_tax_value],]
## Sum values and create another category: others
sum_top_tax <- sum(top_tax$mean)
others_tax <- (100-sum_top_tax)
total_mean <- cbind(top_tax$mean)
total_mean <- rbind(total_mean, others_tax)
results_table[,j] <- total_mean
results_table[,k] <- c(rownames(top_tax), "others")
nam <- paste("Category", j , sep = "")
assign(nam, results_table)
}
View(Category1)
x <- 1:10
for(i in seq_along(x)){
assign(paste('X', i, sep=''), x[i])
}
X1
X2
X6
j = 1
k = 2
others_position = top_tax_value + 1
results_table <- matrix(nrow = others_position, ncol= 2 )
list_names <- list(names(split_categories))
list_names <- as.data.frame(list_names)
rownames(list_names) <- list_names[,1]
for (i in split_categories) {
## Calculate mean
summary_table <- describe(i)
## Find the rows with the highest values by the given value
top_tax <- summary_table[order(summary_table$mean, decreasing = T)[1:top_tax_value],]
## Sum values and create another category: others
sum_top_tax <- sum(top_tax$mean)
others_tax <- (100-sum_top_tax)
total_mean <- cbind(top_tax$mean)
total_mean <- rbind(total_mean, others_tax)
results_table[,j] <- c(rownames(top_tax), "others")
results_table[,k] <- total_mean
nam <- paste("Category", j , sep = "")
assign(nam, results_table[i])
}
j = 1
k = 2
others_position = top_tax_value + 1
results_table <- matrix(nrow = others_position, ncol= 2 )
list_names <- list(names(split_categories))
list_names <- as.data.frame(list_names)
rownames(list_names) <- list_names[,1]
for (i in split_categories) {
## Calculate mean
summary_table <- describe(i)
## Find the rows with the highest values by the given value
top_tax <- summary_table[order(summary_table$mean, decreasing = T)[1:top_tax_value],]
## Sum values and create another category: others
sum_top_tax <- sum(top_tax$mean)
others_tax <- (100-sum_top_tax)
total_mean <- cbind(top_tax$mean)
total_mean <- rbind(total_mean, others_tax)
results_table[,j] <- c(rownames(top_tax), "others")
results_table[,k] <- total_mean
nam <- paste("Category", aa , sep = "")
assign(nam, results_table)
aa <- aa + 1
}
j = 1
k = 2
aa = 1
j = 1
others_position = top_tax_value + 1
results_table <- matrix(nrow = others_position, ncol= 2 )
list_names <- list(names(split_categories))
list_names <- as.data.frame(list_names)
rownames(list_names) <- list_names[,1]
for (i in split_categories) {
## Calculate mean
summary_table <- describe(i)
## Find the rows with the highest values by the given value
top_tax <- summary_table[order(summary_table$mean, decreasing = T)[1:top_tax_value],]
## Sum values and create another category: others
sum_top_tax <- sum(top_tax$mean)
others_tax <- (100-sum_top_tax)
total_mean <- cbind(top_tax$mean)
total_mean <- rbind(total_mean, others_tax)
results_table[,1] <- c(rownames(top_tax), "others")
results_table[,2] <- total_mean
nam <- paste("Category", j , sep = "")
assign(nam, results_table)
j <- j + 1
}
j = 1
others_position = top_tax_value + 1
results_table <- matrix(nrow = others_position, ncol= 2 )
for (i in split_categories) {
## Calculate mean
summary_table <- describe(i)
## Find the rows with the highest values by the given value
top_tax <- summary_table[order(summary_table$mean, decreasing = T)[1:top_tax_value],]
## Sum values and create another category: others
sum_top_tax <- sum(top_tax$mean)
others_tax <- (100-sum_top_tax)
total_mean <- cbind(top_tax$mean)
total_mean <- rbind(total_mean, others_tax)
results_table[,1] <- c(rownames(top_tax), "others")
results_table[,2] <- total_mean
nam <- paste("Category", j , sep = "")
assign(nam, results_table)
j <- j + 1
}
View(Category1)
View(Category2)
View(Category3)
matrix_list <- list()
j = 1
others_position = top_tax_value + 1
results_table <- matrix(nrow = others_position, ncol= 2 )
matrix_list <- list()
for (i in split_categories) {
## Calculate mean
summary_table <- describe(i)
## Find the rows with the highest values by the given value
top_tax <- summary_table[order(summary_table$mean, decreasing = T)[1:top_tax_value],]
## Sum values and create another category: others
sum_top_tax <- sum(top_tax$mean)
others_tax <- (100-sum_top_tax)
total_mean <- cbind(top_tax$mean)
total_mean <- rbind(total_mean, others_tax)
results_table[,1] <- c(rownames(top_tax), "others")
results_table[,2] <- total_mean
nam <- paste("Category", j , sep = "")
matrix_list <-  assign(nam, results_table)
j <- j + 1
}
View(matrix_list)
j = 1
others_position = top_tax_value + 1
results_table <- matrix(nrow = others_position, ncol= 2 )
matrix_list <- list()
for (i in split_categories) {
## Calculate mean
summary_table <- describe(i)
## Find the rows with the highest values by the given value
top_tax <- summary_table[order(summary_table$mean, decreasing = T)[1:top_tax_value],]
## Sum values and create another category: others
sum_top_tax <- sum(top_tax$mean)
others_tax <- (100-sum_top_tax)
total_mean <- cbind(top_tax$mean)
total_mean <- rbind(total_mean, others_tax)
results_table[,1] <- c(rownames(top_tax), "others")
results_table[,2] <- total_mean
nam <- paste("Category", j , sep = "")
matrix_list[[j]] <-  assign(nam, results_table)
j <- j + 1
}
matrix_list$1
matrix_list
for (b in matrix_list) {
rownames(matrix_list[[b]]) <- matrix_list[[b[,1]]]
}
j = 1
others_position = top_tax_value + 1
results_table <- matrix(nrow = others_position, ncol= 2 )
matrix_list <- list()
for (i in split_categories) {
## Calculate mean
summary_table <- describe(i)
## Find the rows with the highest values by the given value
top_tax <- summary_table[order(summary_table$mean, decreasing = T)[1:top_tax_value],]
## Sum values and create another category: others
sum_top_tax <- sum(top_tax$mean)
others_tax <- (100-sum_top_tax)
total_mean <- cbind(top_tax$mean)
total_mean <- rbind(total_mean, others_tax)
results_table[,1] <- c(rownames(top_tax), "others")
results_table[,2] <- total_mean
nam <- paste("Category", j , sep = "")
matrix_list[[nam]] <-  assign(nam, results_table)
j <- j + 1
}
matrix_list
?melt
??melt
data <- do.call(rbind, matrix_list)
View(data)
colors <- c(mapply(rep, 1:length(matrix_list), sapply(matrix_list, nrow)), recursive = T)
plot(data, col= colors)
data <- do.call(cbind, matrix_list)
colors <- c(mapply(rep, 1:length(matrix_list), sapply(matrix_list, nrow)), recursive = T)
plot(data, col= colors)
j = 1
others_position = top_tax_value + 1
results_table <- matrix(nrow = others_position, ncol= 2 )
matrix_list <- list()
for (i in split_categories) {
## Calculate mean
summary_table <- describe(i)
## Find the rows with the highest values by the given value
top_tax <- summary_table[order(summary_table$mean, decreasing = T)[1:top_tax_value],]
## Sum values and create another category: others
sum_top_tax <- sum(top_tax$mean)
others_tax <- (100-sum_top_tax)
total_mean <- cbind(top_tax$mean)
total_mean <- rbind(total_mean, others_tax)
results_table[,1] <- c(rownames(top_tax), "others")
results_table[,2] <- total_mean
nam <- paste("Category", j , sep = "")
matrix_list[[j]] <-  assign(nam, results_table)
j <- j + 1
}
matrix_list
a = 1
j = 1
others_position = top_tax_value + 1
results_table <- matrix(nrow = others_position, ncol= 2 )
matrix_list <- list()
for (i in split_categories) {
## Calculate mean
summary_table <- describe(i)
## Find the rows with the highest values by the given value
top_tax <- summary_table[order(summary_table$mean, decreasing = T)[1:top_tax_value],]
## Sum values and create another category: others
sum_top_tax <- sum(top_tax$mean)
others_tax <- (100-sum_top_tax)
total_mean <- cbind(top_tax$mean)
total_mean <- rbind(total_mean, others_tax)
results_table[,1] <- c(rownames(top_tax), "others")
results_table[,2] <- total_mean
nam <- paste("Category", j , sep = "")
matrix_list[[j]] <-  assign(nam, results_table)
j <- j + 1
}
library(reshape2)
merged_df <- merge_all(matrix_list)
install.packages("reshape")
library(reshape)
merged_df <- merge_all(matrix_list)
View(merged_df)
set.seed(31)
a <- data.frame(one=sample(1:10), two=runif(10,0,1))
set.seed(21)
b <- data.frame(one=sample(1:10), two=runif(10,0,1))
set.seed(11)
c <- data.frame(one=sample(1:10), two=runif(10,0,1))
set.seed
a
b
c
head(a)
?head
list_df <- list(a,b,c)
list_df
merged_df <- merge_all(list_df)
View(merged_df)
matrix_list
for(k in seq_along(matrix_list)) {
colnames(randoms[[k]]) <- c("taxa","mean")
}
for(k in seq_along(matrix_list)) {
colnames(matrix_list[[k]]) <- c("taxa","mean")
}
matrix_list
MyMerge <- function(x, y){
df <- merge(x, y, by="taxa" , all.x= TRUE, all.y= TRUE)
return(df)
}
composition_table <- Reduce(MyMerge, matrix_list)
View(composition_table)
View(filum_group_table)
filum_group_table$bacteria=row.names(filum_group_table)
row.names(filum_group_table)=NULL
my_table=melt(filum_group_table)
View(my_table)
my_table <- melt(composition_table)
View(my_table)
j = 1
others_position = top_tax_value + 1
results_table <- matrix(nrow = others_position, ncol= 2 )
matrix_list <- list()
for (i in split_categories) {
## Calculate mean
summary_table <- describe(i)
## Find the rows with the highest values by the given value
top_tax <- summary_table[order(summary_table$mean, decreasing = T)[1:top_tax_value],]
## Sum values and create another category: others
sum_top_tax <- sum(top_tax$mean)
others_tax <- (100-sum_top_tax)
total_mean <- cbind(top_tax$mean)
total_mean <- rbind(total_mean, others_tax)
results_table[,1] <- total_mean
results_table[,2] <- c(rownames(top_tax), "others")
nam <- paste("Category", j , sep = "")
matrix_list[[j]] <-  assign(nam, results_table)
j <- j + 1
}
matrix_list
for(k in seq_along(matrix_list)) {
colnames(matrix_list[[k]]) <- c("mean","bacteria")
}
matrix_list
composition_table <- Reduce(MyMerge, matrix_list)
MyMerge <- function(x, y){
df <- merge(x, y, by="bacteria" , all.x= TRUE, all.y= TRUE)
return(df)
}
composition_table <- Reduce(MyMerge, matrix_list)
View(composition_table)
my_table <- melt(composition_table)
my_table <- rbind(matrix_list)
View(my_table)
my_table <- cbind(matrix_list)
View(my_table)
composition_table <- Reduce(MyMerge, matrix_list)
View(composition_table)
View(filum_group_table)
my_table <- melt(composition_table)
View(merged_df)
View(my_table)
?melt
View(category_groups)
View(Category1)
View(data)
data <- do.call(rbind, matrix_list)
View(data)
filum_group_table$bacteria=row.names(filum_group_table)
row.names(filum_group_table)=NULL
my_table=melt(filum_group_table)
View(my_table)
filum_group_table$bacteria=row.names(filum_group_table)
View(filum_group_table)
filum_group_table <- merge(normal_intermediate, small_results, by = "row.names")
rownames(filum_group_table) <- filum_group_table[,1]
normal_intermediate <- merge(normal_results, intermediate_results, by="row.names")
rownames(normal_intermediate) <- normal_intermediate[,1]
normal_intermediate <- normal_intermediate[,-1]
filum_group_table <- merge(normal_intermediate, small_results, by = "row.names")
rownames(filum_group_table) <- filum_group_table[,1]
filum_group_table <- filum_group_table[,-1]
intermediate_filum <- subset(filum_groups, filum_groups$Group=="intermediate")
intermediate_filum <- intermediate_filum[,-13]
resum_intermediate <- describe(intermediate_filum)
top4_table_intermediate <- resum_intermediate[order(resum_intermediate$mean, decreasing = T)[1:4],]
sum_top4_intermediate <- sum(top4_table_intermediate$mean)
others_intermediate <- (100-sum_top4_intermediate)
intermediate_results <- subset(top4_table_intermediate, select = "mean")
colnames(intermediate_results) <- "Intermediate"
intermediate_results <- rbind(intermediate_results, others_intermediate)
rownames(intermediate_results)[5] <- "others"
normal_filum <- subset(filum_groups, filum_groups$Group=="normal")
normal_filum <- normal_filum[,-13]
resum_normal <- describe(normal_filum)
top4_table_normal <- resum_normal[order(resum_normal$mean, decreasing = T)[1:4],]
sum_top4_normal <- sum(top4_table_normal$mean)
others_normal <- (100-sum_top4_normal)
normal_results <- subset(top4_table_normal, select = "mean")
colnames(normal_results) <- "Normal"
normal_results <- rbind(normal_results, others_normal)
rownames(normal_results)[5] <- "others"
small_filum <- subset(filum_groups, filum_groups$Group=="small intestine")
small_filum <- small_filum[,-13]
resum_small <- describe(small_filum)
top4_table_small <- resum_small[order(resum_small$mean, decreasing = T)[1:4],]
sum_top4_small <- sum(top4_table_small$mean)
others_small <- (100-sum_top4_small)
small_results <- subset(top4_table_small, select = "mean")
colnames(small_results) <- "Small_Intestine"
small_results <- rbind(small_results, others_small)
rownames(small_results)[5] <- "others"
normal_intermediate <- merge(normal_results, intermediate_results, by="row.names")
rownames(normal_intermediate) <- normal_intermediate[,1]
normal_intermediate <- normal_intermediate[,-1]
filum_group_table <- merge(normal_intermediate, small_results, by = "row.names")
rownames(filum_group_table) <- filum_group_table[,1]
filum_group_table <- filum_group_table[,-1]
View(composition_table)
rownames(composition_table) <- composition_table[,1]
composition_table <- composition_table[,-1]
for (bb in 1:ncol(composition_table)) {
name_col <- paste("Category", increasing_number, sep = "")
composition_table[,bb] <- assign(name_col)
}
increasing_number = 1
for (bb in 1:ncol(composition_table)) {
name_col <- paste("Category", increasing_number, sep = "")
composition_table[,bb] <- assign(name_col)
increasing_number <- increasing_number + 1
}
for (bb in 1:ncol(composition_table)) {
nc <- paste("Category", bb , sep = "")
colnames(composition_table)[bb] = nc
assign(nc,composition_table)
}
my_plot_table <- melt(composition_table)
composition_table$bacteria = row.names(composition_table)
row.names(composition_table) <- NULL
my_plot_table <- melt(composition_table)
View(my_plot_table)
my_plot_table <- melt(composition_table, id.vars = "bacteria")
View(my_plot_table)
filum_plot <- ggplot (my_plot_table, aes(x=variable, y=value)) + geom_bar (aes(fill = bacteria), stat = "identity") + theme_classic() + xlab("Group") + ylab("relative_abundance")
library(ggplot2)
filum_plot <- ggplot (my_plot_table, aes(x=variable, y=value)) + geom_bar (aes(fill = bacteria), stat = "identity") + theme_classic() + xlab("Group") + ylab("relative_abundance")
filum_plot
View(my_table)
View(my_plot_table)
intermediate_filum <- subset(filum_groups, filum_groups$Group=="intermediate")
intermediate_filum <- intermediate_filum[,-13]
resum_intermediate <- describe(intermediate_filum)
top4_table_intermediate <- resum_intermediate[order(resum_intermediate$mean, decreasing = T)[1:4],]
sum_top4_intermediate <- sum(top4_table_intermediate$mean)
others_intermediate <- (100-sum_top4_intermediate)
intermediate_results <- subset(top4_table_intermediate, select = "mean")
colnames(intermediate_results) <- "Intermediate"
intermediate_results <- rbind(intermediate_results, others_intermediate)
rownames(intermediate_results)[5] <- "others"
normal_filum <- subset(filum_groups, filum_groups$Group=="normal")
normal_filum <- normal_filum[,-13]
resum_normal <- describe(normal_filum)
top4_table_normal <- resum_normal[order(resum_normal$mean, decreasing = T)[1:4],]
sum_top4_normal <- sum(top4_table_normal$mean)
others_normal <- (100-sum_top4_normal)
normal_results <- subset(top4_table_normal, select = "mean")
colnames(normal_results) <- "Normal"
normal_results <- rbind(normal_results, others_normal)
rownames(normal_results)[5] <- "others"
small_filum <- subset(filum_groups, filum_groups$Group=="small intestine")
small_filum <- small_filum[,-13]
resum_small <- describe(small_filum)
top4_table_small <- resum_small[order(resum_small$mean, decreasing = T)[1:4],]
sum_top4_small <- sum(top4_table_small$mean)
others_small <- (100-sum_top4_small)
small_results <- subset(top4_table_small, select = "mean")
colnames(small_results) <- "Small_Intestine"
small_results <- rbind(small_results, others_small)
rownames(small_results)[5] <- "others"
normal_intermediate <- merge(normal_results, intermediate_results, by="row.names")
rownames(normal_intermediate) <- normal_intermediate[,1]
normal_intermediate <- normal_intermediate[,-1]
filum_group_table <- merge(normal_intermediate, small_results, by = "row.names")
rownames(filum_group_table) <- filum_group_table[,1]
filum_group_table <- filum_group_table[,-1]
library(reshape2)
library(ggplot2)
filum_group_table$bacteria=row.names(filum_group_table)
row.names(filum_group_table)=NULL
my_table=melt(filum_group_table)
filum_plot <- ggplot (my_table, aes(x=variable, y=value)) + geom_bar (aes(fill = bacteria), stat = "identity") + theme_classic() + xlab("Group") + ylab("relative_abundance")
filum_plot
filum_groups <- merge(category_groups, tax_level_table, by = "row.names")
rownames(filum_groups) <- filum_groups[,1]
filum_groups <- filum_groups[,-1]
split_categories <- split(filum_groups, filum_groups[,1])
library(psych)
j = 1
others_position = top_tax_value + 1
results_table <- matrix(nrow = others_position, ncol= 2 )
matrix_list <- list()
for (i in split_categories) {
## Calculate mean
summary_table <- describe(i)
## Find the rows with the highest values by the given value
top_tax <- summary_table[order(summary_table$mean, decreasing = T)[1:top_tax_value],]
## Sum values and create another category: others
sum_top_tax <- sum(top_tax$mean)
others_tax <- (100-sum_top_tax)
total_mean <- cbind(top_tax$mean)
total_mean <- rbind(total_mean, others_tax)
results_table[,1] <- total_mean
results_table[,2] <- c(rownames(top_tax), "others")
nam <- paste("Category", j , sep = "")
matrix_list[[j]] <-  assign(nam, results_table)
j <- j + 1
}
for(k in seq_along(matrix_list)) {
colnames(matrix_list[[k]]) <- c("mean","bacteria")
}
MyMerge <- function(x, y){
df <- merge(x, y, by="bacteria" , all.x= TRUE, all.y= TRUE)
return(df)
}
library(reshape2)
library(ggplot2)
composition_table <- Reduce(MyMerge, matrix_list)
rownames(composition_table) <- composition_table[,1]
composition_table <- composition_table[,-1]
for (bb in 1:ncol(composition_table)) {
nc <- paste("Category", bb , sep = "")
colnames(composition_table)[bb] = nc
assign(nc,composition_table)
}
composition_table$bacteria = row.names(composition_table)
row.names(composition_table) <- NULL
my_plot_table <- melt(composition_table, id.vars = "bacteria")
filum_plot <- ggplot (my_plot_table, aes(x=variable, y=value)) + geom_bar (aes(fill = bacteria), stat = "identity") + theme_classic() + xlab("Group") + ylab("relative_abundance")
filum_plot
order_plot <- ggplot (my_plot_table, aes(x=variable, y=value)) + geom_bar (aes(fill = bacteria), stat = "identity") + theme(legend.position="top", legend.text = element_text(size=4)) + xlab("Group") + ylab("relative_abundance")
order_plot
